from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError
from aiogram.types import Message
from aiogram.utils import markdown

from utils.helpers import get_link_to_user
from utils.filters import is_proper_admin
from utils.keyboard_utils import build_inline_kb_markup
from config import KB_BUTTONS


async def forward_to_admins(thread_question_message: Message, group_id: int | str, bot: Bot):  # , additional_text: str = None):
    error_code = 0
    info_message = await thread_question_message.answer("‚è≥–ü—Ä–æ–∏–∑–≤–æ–∂—É –æ—Ç–ø—Ä–∞–≤–∫—É. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...")
    for cur_admin in await bot.get_chat_administrators(group_id):
        # print(error_code)
        try:
            # if is_proper_admin(cur_admin, message):
                # if additional_text:
                #     await bot.send_message(cur_admin.user.id, additional_text)
                await thread_question_message.forward(cur_admin.user.id)
                await bot.send_message(
                    cur_admin.user.id,
                    markdown.hitalic(f"üëÜ–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {get_link_to_user(thread_question_message.from_user)}üëÜ"),
                    reply_markup=build_inline_kb_markup(thread_question_message, KB_BUTTONS["thread_management"])
                )

                #-----------------------------
                print(cur_admin.user.username)
                #-----------------------------
        except TelegramBadRequest:
            error_code = 1
        except TelegramForbiddenError:
            error_code = 2

    match error_code:
        case 0:
            await info_message.edit_text("‚úÖ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º")
        case 1:
            await info_message.edit_text("‚ùå–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –∏—Å—Ö–æ–¥–Ω–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        case 2:
            await info_message.edit_text(
                "‚ö†Ô∏è–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –Ω–æ –æ–Ω–æ –¥–æ—à–ª–æ –Ω–µ –¥–æ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤. "
                "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, –∫—Ç–æ-—Ç–æ –∏–∑ –Ω–∏—Ö –Ω–µ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º"
            )


# TODO button to take on the conversation
# async def answer_to_goy():
#     pass